<section class="bg-gray-900 rounded-lg p-6" id="accessibility-section">
    <h2 class="text-2xl text-white font-bold my-4">3. Accessibility</h2>
    <article class="space-y-6">
        <h3 class="text-white font-bold">3.1 What is Web Accessibility?</h3>
        <p class="text-white">Web accessibility refers to the inclusive practice of ensuring websites and web applications can be used by everyone, regardless of disability or impairment. This includes designing and coding websites so that they are perceivable, operable, understandable, and robust for all users.</p>

        <h3 class="text-white font-bold">3.2 Assistive Technologies</h3>
        <p class="text-white">Assistive technologies are tools or software that help people with disabilities navigate and interact with digital content. Examples include screen readers, magnifiers, alternative input devices, and voice recognition software.</p>

        <h3 class="text-white font-bold">3.3 Accessibility Tree</h3>
        <p class="text-white">The accessibility tree is a hierarchical representation of accessible objects in a web page, used by assistive technologies to navigate and interact with content. It ensures that all elements, including those dynamically generated by JavaScript, are accessible.
            To see accessibility tree you can go to developer mode in your browser, for Example i use Chrome and you will find accessibility fearture like image below.
        </p>
        <div class="w-2/3">
            <img src="img/tutorial/dev-mode-chrome.png" alt="image about developer mode in chrome." class="my-4">
            <img class="my-4" src="img/tutorial/dev-mode-with-accessibility.png" alt="image about developer mode in chrome after accessibility-tree function is enable.">
            <img class="my-4" src="img/tutorial/accessibility-tree.png" alt="example image to see accessibility tree.">
        </div>

        <h3 class="text-white font-bold">3.4 Accessibility Testing</h3>
        <p class="text-white">Accessibility testing involves evaluating a website or application to ensure it meets accessibility standards and guidelines. Testing tools, manual checks, and user testing are common methods to identify and fix accessibility issues.
            For testing you can use <a href="https://www.deque.com/axe/devtools/" target="_blank" class="underline decoration-solid text-blue-400">Axe DevTool</a> or <a href="https://chromewebstore.google.com/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk?hl=in" target="_blank" class="underline decoration-solid text-blue-400">Lighthouse</a> extention in chrome. it will help you to see if the page dont match with standart WCAG 2.0.
            and for Contrast checker you can use build-in feature from chrome, in developer mode you can hovering text and chrome will show if text has a good contrast or not like example below:
        </p>
        <div class="flex flex-col md:flex-row my-4 w-3/4 justify-center">
            <img src="img/tutorial/bad-contrast.png" alt="image about text with bad contrast" class="h-60">
            <img src="img/tutorial/good-contrast.png" alt="image about text with good contrast" class="h-60">
        </div>

        <h3 class="text-white font-bold">3.5 Accessibility Guidelines</h3>
        <p class="text-white">Accessibility guidelines, such as WCAG (Web Content Accessibility Guidelines), provide standards and recommendations for making web content more accessible. They cover aspects like text alternatives, color contrast, keyboard accessibility, and more.
            For more information you can <a href="https://www.w3.org/TR/WCAG21/" target="_blank" class="underline decoration-solid text-blue-400">visit WCAG website</a>.
        </p>

        <h3 class="text-white font-bold">3.6 Example</h3>
        <p class="text-white">In this section we will learn how to improve your Skill to accommodate accessibility.</p>

        <h3 class="text-white font-bold">3.6.1 Color Contrast</h3>
        <p class="text-white">Like in section before we talk about color contrast and how we can test it. According to WCAG contrast on text and image should has a contrast rasio at least 4.5:1 for normal size or 3:1 for Large Text.
            you can <a href="https://www.w3.org/TR/WCAG21/" target="_blank" class="underline decoration-solid text-blue-400">visit WCAG website</a> to get more information.</p>
        <p class="text-white">Now <a href="{{route('color.contrast')}}" target="_blank" class="underline decoration-solid text-blue-400">open color-contrast page</a> to see how bad or good color contrast on text, and try to see it with build in Chrome function.</p>

        <h3 class="text-white font-bold">3.6.2 Use of Color</h3>
        <p class="text-white">In this part i want to talk about how we use color to define some infomartion, but according to WCAG just showing color not enough to give information to users.
            And they suggest to add text or icon into color to make user better understanding about information.</p>
        <p class="text-white">Here i want to show you an example from how we suppose to use color and text or icon to show some information.</p>
        <div class="flex flex-row justify-center">
            <img src="img/tutorial/status-without-text.png" alt="user status without text or icon" class="w-1/3">
            <img src="img/tutorial/status-with-text.png" alt="user status with text or icon" class="w-1/3">
        </div>
        <p class="text-white">From that image we can say, the second image is better to deliver an information to user then the first image.</p>

        <h3 class="text-white font-bold">3.6.3 Alternative Text</h3>
        <p class="text-white">For Alternative text there are a couple thing we need to consider. For example in image we need to add alternative text to describe image,
            but it need to be short and right description, so then user with visual disability can understand what the image about. And keep in mind not all image should has 
            alternative text, just important image need to has alternative. Dont use it on decorative image or non related image.
        </p>
        <p class="text-white">Now i want to show you how to implement alternative text to an image.</p>
        <div class="">
            <img src="img/banner.png" alt="" class="w-1/3 mx-auto">
            <p class="text-white">here is bad example for alternative text on that image</p>
            <pre class="bg-gray-800 rounded-lg p-4 overflow-x-auto" tabindex="0">
                            <code class="text-white">
&lt;img src=&quot;img/banner.png&quot; alt=&quot;&quot;&gt;</code>
            </pre>
            <p class="text-white">here is good example for alternative text on that image</p>
            <pre class="bg-gray-800 rounded-lg p-4 overflow-x-auto" tabindex="0">
                            <code class="text-white">
&lt;img src=&quot;img/banner.png&quot; alt=&quot;A yellow smiley face with a black outline, black eyes, and a large black smile.&quot;&gt;</code>
            </pre>
        </div>


        <h3 class="text-white font-bold">3.6.4 Links</h3>
        <p class="text-white">Same with alternative text, in link we need to give an detail where it will take not so ambiguous that can confuse users.</p>
        <p class="text-white">For example: You can see more information in bootstrap documentation <a href="#" target="_blank" class="underline decoration-solid text-blue-400">Click here!</a></p>
        <p class="text-white">it's better to do like this: You can see more information in <a href="#" target="_blank" class="underline decoration-solid text-blue-400">bootstrap documentation</a>.</p>

        <h3 class="text-white font-bold">3.6.5 Labels and inputs</h3>
        <p class="text-white">For label we need to connect it with item that assosiate with, like example in form input. Normally we use placeholder to show information to users what about this input about is.
            but according to WCAG, we can use label to show that information and use place holder for an example. let me show you what is mean.
        </p>
        <p class="text-white">here is the bad example:</p>
        <div class="flex flex-col bg-gray-800 p-4 rounded">
            <pre class="bg-gray-900 rounded p-4 m-4 overflow-x-auto" tabindex="0">
                <code class="text-white">
&lt;form action=&quot;&quot; methods=&quot;post&quot; class=&quot;flex flex-col&quot;&gt; 
    &lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;Username&quot; class=&quot;bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 p-1&quot; required&gt; 
    &lt;input type=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;Email&quot; class=&quot;my-4 bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 p-1&quot; required&gt; 
&lt;/form&gt;</code>
            </pre>
            <form action="" methods="post" class="flex flex-col">
                <input type="text" name="username" placeholder="Username" class="bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 p-1" required>
                <input type="email" name="email" placeholder="Email" class="my-4 bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 p-1" required>
            </form>
        </div>

        <p class="text-white">here is what should we write:</p>
        <div class="flex flex-col bg-gray-800 p-4 rounded">
            <pre class="bg-gray-900 rounded p-4 m-4 overflow-x-auto" tabindex="0">
                <code class="text-white">
&lt;form action=&quot;&quot; methods=&quot;post&quot; class=&quot;flex flex-col&quot;&gt; 
    &lt;label for=&quot;username&quot; class=&quot;text-white text-lg&quot;&gt;Username&lt;/label&gt; 
    &lt;input id=&quot;username&quot; type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;John Titor&quot; class=&quot;bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 p-1&quot; required&gt; 
    &lt;label for=&quot;email&quot; class=&quot;text-white text-lg&quot;&gt;Email&lt;/label&gt; 
    &lt;input id=&quot;email&quot; type=&quot;email&quot; name=&quot;email&quot; placeholder=&quot;john.titor@example.com&quot; class=&quot; bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 p-1&quot; required&gt; 
&lt;/form&gt;</code>
            </pre>
            <form action="" methods="post" class="flex flex-col">
                <label for="username" class="text-white text-lg">Username</label>
                <input id="username" type="text" name="username" placeholder="John Titor" class="bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 p-1" required>
                <label for="email" class="text-white text-lg">Email</label>
                <input id="email" type="email" name="email"  placeholder="john.titor@example.com" class=" bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 p-1" required>
            </form>
        </div>

        <p class="text-white">So from that example we add label and assosiate that label to input tag, to do that you just need to add <code class="bg-gray-700 rounded px-2 py-1">for="username"</code> in label and match it <code class="bg-gray-700 rounded px-2 py-1">id="username"</code> in input tag.</p>
        

        <h3 class="text-white font-bold">3.6.6 Radio Button</h3>
        <p class="text-white">Same with last part, to use radio button it should have label for the information. like this:</p>
        <div class="flex flex-col bg-gray-800 p-4 rounded">
            <pre class="bg-gray-900 rounded p-4 m-4 overflow-x-auto" tabindex="0">
                <code class="text-white">
&lt;form action=&quot;&quot; methods=&quot;post&quot; class=&quot;bg-white p-4 rounded&quot; &gt; 
    &lt;p&gt;do you agree?&lt;/p&gt; 
    &lt;input type=&quot;radio&quot; id=&quot;agree&quot; name=&quot;radio_button&quot; value=&quot;Yes&quot;&gt; 
    &lt;label for=&quot;agree&quot;&gt;Yes&lt;/label&gt; 
    &lt;input type=&quot;radio&quot; id=&quot;no&quot; name=&quot;radio_button&quot; value=&quot;No&quot;&gt; 
    &lt;label for=&quot;agree&quot;&gt;No&lt;/label&gt; 
&lt;/form&gt;</code>
            </pre>
            <form action="" methods="post" class="bg-white p-4 rounded" > 
                <p>do you agree?</p> 
                <input type="radio" id="agree" name="radio_button" value="Yes"> 
                <label for="agree">Yes</label>
                <input type="radio" id="no" name="radio_button" value="No">
                <label for="no">No</label>
            </form>
        </div>
        <p class="text-white">Not just using labels in radio button, we can use legend and fieldset to make it more understandable. here is an example:</p>
        <div class="flex flex-col bg-gray-800 p-4 rounded">
            <pre class="bg-gray-900 rounded p-4 m-4 overflow-x-auto" tabindex="0">
                <code class="text-white">
&lt;form action=&quot;&quot; method=&quot;post&quot; class=&quot;bg-white p-4 rounded&quot;&gt; 
    &lt;fieldset&gt; 
        &lt;legend&gt;Do you agree?&lt;/legend&gt; 
        &lt;input type=&quot;radio&quot; id=&quot;ja&quot; name=&quot;radio_button&quot; value=&quot;Yes&quot;&gt; 
        &lt;label for=&quot;ja&quot;&gt;Yes&lt;/label&gt; 
        &lt;input type=&quot;radio&quot; id=&quot;nein&quot; name=&quot;radio_button&quot; value=&quot;No&quot;&gt; 
        &lt;label for=&quot;nein&quot;&gt;No&lt;/label&gt; 
    &lt;/fieldset&gt; 
&lt;/form&gt;</code>
            </pre>
            <form action="" method="post" class="bg-white p-4 rounded">
                <fieldset>
                    <legend>Do you agree?</legend>
                    <input type="radio" id="ja" name="radio_button" value="Yes">
                    <label for="ja">Yes</label>
                    <input type="radio" id="nein" name="radio_button" value="No">
                    <label for="nein">No</label>
                </fieldset>
            </form>

        </div>

        <h3 class="text-white font-bold">3.6.7 Semantic HTML</h3>

        <h3 class="text-white font-bold">3.6.8 List</h3>

        <h3 class="text-white font-bold">3.6.9 Text Size</h3>

        <h3 class="text-white font-bold">3.6.10 Heading</h3>

        <h3 class="text-white font-bold">3.6.11 ARIA</h3>

        <h3 class="text-white font-bold">3.6.12 ARIA Live Regions</h3>
    
        <h3 class="text-white font-bold">3.6.13 Accessible JavaScript</h3>
    
        <h3 class="text-white font-bold">3.6.14 Hiding Content</h3>

    
    </article>
    <a href="https://v2.scrimba.com/learn-accessible-web-design-c031" class="text-yellow-500">scrimba video</a>
    <a href="https://learn.udacity.com/courses/ud891/lessons/06723ea4-bc46-4211-b95e-be8f70709eee/concepts/063c9254-1b05-4764-9c0b-e111e5ed1593" class="text-yellow-500">Udacity</a>
</section>
